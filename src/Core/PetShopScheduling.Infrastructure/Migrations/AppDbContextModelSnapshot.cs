// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShopScheduling.Infrastructure.Context;

#nullable disable

namespace PetShopScheduling.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("PetShopScheduling.Infrastructure.Entry.Registration.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT")
                        .HasColumnName("cpf");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("PetShopScheduling.Infrastructure.Entry.Registration.CustomerAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("CEP")
                        .HasColumnType("TEXT")
                        .HasColumnName("cep");

                    b.Property<long>("CustomerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_cliente");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("TEXT")
                        .HasColumnName("bairro");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT")
                        .HasColumnName("numero");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT")
                        .HasColumnName("observacao");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT")
                        .HasColumnName("rua");

                    b.HasKey("Id");

                    b.ToTable("endereco_usuario");
                });

            modelBuilder.Entity("PetShopScheduling.Infrastructure.Entry.Registration.CustomerPhone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("CustomerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_cliente");

                    b.Property<bool>("IsZapZap")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tem_whatsapp");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT")
                        .HasColumnName("observação");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.ToTable("telefone_usuario");
                });

            modelBuilder.Entity("PetShopScheduling.Infrastructure.Entry.Registration.Pet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("SpecieType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tipo_animal");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_nascimento");

                    b.Property<long>("CustomerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_cliente");

                    b.Property<string>("Identification")
                        .HasColumnType("TEXT")
                        .HasColumnName("identificação");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT")
                        .HasColumnName("observação");

                    b.Property<int?>("PetSize")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tamanho");

                    b.Property<string>("Race")
                        .HasColumnType("TEXT")
                        .HasColumnName("raca");

                    b.HasKey("Id");

                    b.ToTable("pet");
                });

            modelBuilder.Entity("PetShopScheduling.Infrastructure.Entry.Registration.ReservedVaccine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("ScheduleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_agendamento");

                    b.Property<long>("VaccineId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_vacina");

                    b.HasKey("Id");

                    b.ToTable("vacina_reservada");
                });

            modelBuilder.Entity("PetShopScheduling.Infrastructure.Entry.Registration.Schedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("CustomerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_cliente");

                    b.Property<DateOnly>("Day")
                        .HasColumnType("TEXT")
                        .HasColumnName("dia");

                    b.Property<int?>("GroomingType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tipo_tosa");

                    b.Property<bool>("HasBath")
                        .HasColumnType("INTEGER")
                        .HasColumnName("banho");

                    b.Property<bool>("HasGromming")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tosa");

                    b.Property<bool>("HasVaccine")
                        .HasColumnType("INTEGER")
                        .HasColumnName("vacina");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT")
                        .HasColumnName("observacao");

                    b.Property<long>("PetId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_pet");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT")
                        .HasColumnName("horario");

                    b.Property<long?>("VaccineId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_vacina");

                    b.HasKey("Id");

                    b.ToTable("agendamento");
                });

            modelBuilder.Entity("PetShopScheduling.Infrastructure.Entry.Registration.SchedulePet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("PetId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_pet");

                    b.Property<long>("ScheduleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_agendamento");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("agendamento_pet");
                });

            modelBuilder.Entity("PetShopScheduling.Infrastructure.Entry.Registration.ScheduleVaccine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("ScheduleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_agendamento");

                    b.Property<long>("VaccineId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_vacina");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("VaccineId");

                    b.ToTable("agendamento_vacina");
                });

            modelBuilder.Entity("PetShopScheduling.Infrastructure.Entry.Registration.Vaccine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Batch")
                        .HasColumnType("TEXT")
                        .HasColumnName("lote");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT")
                        .HasColumnName("fabricante");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER")
                        .HasColumnName("estoque");

                    b.Property<int>("VaccineStatus")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status_vacina");

                    b.Property<DateOnly>("Validity")
                        .HasColumnType("TEXT")
                        .HasColumnName("validade");

                    b.HasKey("Id");

                    b.ToTable("vacina");
                });

            modelBuilder.Entity("ServiceShopScheduling.Infrastructure.Entry.Registration.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("servico");
                });

            modelBuilder.Entity("PetShopScheduling.Infrastructure.Entry.Registration.SchedulePet", b =>
                {
                    b.HasOne("PetShopScheduling.Infrastructure.Entry.Registration.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShopScheduling.Infrastructure.Entry.Registration.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("PetShopScheduling.Infrastructure.Entry.Registration.ScheduleVaccine", b =>
                {
                    b.HasOne("PetShopScheduling.Infrastructure.Entry.Registration.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShopScheduling.Infrastructure.Entry.Registration.Vaccine", "Vaccine")
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("Vaccine");
                });
#pragma warning restore 612, 618
        }
    }
}
